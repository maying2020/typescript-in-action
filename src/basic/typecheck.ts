// 类型检查机制
// ts编译器在做类型检查时所秉承的一些原则，以及表现出的一些行为 

// 作用 辅助开发 提高开发效率

// 类型推断
// 不需要指定变量的类型（函数的返回值类型）ts可以根据某些规则自动的为其推断出一个类型：
// 基础类型推断 
let a = 1
let b = [1]

let cc = (x = 1)=> x+1

// 最佳通用类型推断 (从右向左推断 根据表达式的值推断表达式变量的类型)
let d = [1,null]
// 上下文类型推断（推断：从左向右）主要场景发生在一个事件处理中

// window.onkeydown = (event) =>{
//   console.log(event.button)
// }

// 类型兼容性
// 类型保护


// 你更了解你的代码
// 类型断言
interface Foo{
  bar:number
}
// 第一种写法
// let foo = {} as Foo;
// foo.bar= 1;

// 第二种写法
let foo1:Foo = {
  bar:1
}

// Ts类型推断可以为我们提供重要的辅助信息，应该慎加利用，可以看自己过去的代码什么时候可以利用类型推断进行优化


